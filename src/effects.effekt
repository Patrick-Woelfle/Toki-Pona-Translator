module effects

import src/syntaxTree
import io/console


record Plural()

record MultipleMeanings()

type Context {
  Subject()
  Object()
  Verb()
  Preposition()
  Modifier()
  Preverb()
  Adverb()
}

def askQuestion(question: String): String / { Console } = {
  do writeLine(question)
  do readLine()
}

/// Used when word isn't known
effect unknownWord(word: String): String

/// Used to append something to a Syntax Tree
effect append(l: SyntaxTree): Unit

/// Used to signal an error in the sentence
effect sentenceError(msg: String): Unit

/// Used when toki pona word is used in wrong context
effect wrongContext(msg: String, context: Context): Unit

/// Used to add a word to a sentence
effect addToSentence(msg: String): Unit

/// Used when Sentence has multiple translations
effect ambiguity(first: String, second: String, third: String, fourht: String): String

effect ambiguityVerbOnlyLi(): Bool

/// Used to escape context of multiple resumptions
effect escapeContext(msg: String): Unit

/// Used to signal that a word is not third person singular
effect notThirdPersonSingular(): Unit

/// Used to signal, that the next word should be negated
effect negateNext(): Unit

effect hold(storedValue: String, code: String): Unit

effect release(code: String): String

def main(): Unit = {
  with console;
  println(askQuestion("a"))
}